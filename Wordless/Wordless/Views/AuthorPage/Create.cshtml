@model Wordless.Models.Book
@using Wordless.Models;
@{WordlessContext db = new WordlessContext(); }

@{
    ViewBag.Title = "Create";
}

<body>
    <div class="container">
        <div class="row">
            <div class="">
                <div class="col-lg-8 col-md-8">
                    <div class="bodyDiv register-page-div">
                        <div class="form-horizontal row">
                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                <h4>Add book</h4>
                                <hr />
                                <form role="form" action="~/AuthorPage/Create" method="post" enctype="multipart/form-data">

                                    @Html.AntiForgeryToken()

                                    <div class="form-group col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        @Html.LabelFor(model => model.Title)
                                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                    <div class="form-group col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
                                        @Html.EnumDropDownListFor(model => model.Genre, htmlAttributes: new { @class = "form-control" })
                                    </div>

                                    <div class="form-group col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>

                                    <div class="form-group col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        @Html.LabelFor(model => model.BookText, htmlAttributes: new { @class = "control-label col-md-2" })
                                        @Html.EditorFor(model => model.BookText, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                                    <div class="form-group col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        <div>
                                            <label for="upload">Upload PDF</label>
                                            <input type="file" id="upload" name="upload" />
                                        </div>
                                    </div>


                                    <div class="form-group col-md-offset-2 col-md-10">
                                        <input type="submit" value="Create" class="btn btn-default" />
                                    </div>
                                </form>
                            </div>
                        </div>

                        @Html.ActionLink("Back to List", "Index")
                    </div>

                </div>
                <div class="col-md-4 col-lg-4">
                    <div class="sidebar-Top sidebar-nav hidden-sm hidden-xs">
                        @{
                            var mostDownloadedList = Session["MostDownloaded"] as List<Wordless.Models.Book>;
                        }<Wordless.Models.Book>
                            @if (mostDownloadedList.Count > 0)
                            {
                                <p class="sidebar-name">Most downloaded</p>
                                foreach (var book in mostDownloadedList)
                                {
                                    var AuthorName = (from x in db.Books
                                                      where x.BookId == book.BookId
                                                      select x.Author.Name).First();
                                    <ul class="sidebar-list">
                                        <li><a href="@Url.Action("BookDetails", "Book" , new { bookId=book.BookId })"><span class="glyphicon glyphicon-book"></span><strong> @book.Title</strong></a></li>
                                        <li class="sidebar-list-text-author">Written by: @AuthorName</li>
                                        <li>@book.TimesPurchased <span class="glyphicon glyphicon-credit-card"></span></li>
                                    </ul>
                                }
                            }
                    </div>
                    <div class="sidebar-mid-bot sidebar-nav hidden-sm hidden-xs">
                        @{
                            var bestRatedList = Session["BestRating"] as List<Wordless.Models.PurchasedBook>;
                        }<Wordless.Models.PurchasedBook>
                            @if (bestRatedList.Count > 0)
                            {
                                <p class="sidebar-name">Best rating</p>
                                foreach (var item in bestRatedList)
                                {
                                    var AuthorName = (from x in db.Books
                                                      where x.BookId == item.Book.BookId
                                                      select x.Author.Name).First();
                                    <ul class="sidebar-list">
                                        <li><a href="@Url.Action("BookDetails", "Book" , new { bookId=item.BookId })"><span class="glyphicon glyphicon-book"></span><strong> @item.Book.Title</strong></a></li>
                                        <li class="sidebar-list-text-author">Written by: @AuthorName</li>
                                        <li>@item.Rating <span class="glyphicon glyphicon-star"></span></li>
                                    </ul>
                                }
                            }
                    </div>
                    <div class="sidebar-mid-bot sidebar-nav hidden-sm hidden-xs">
                        @{
                            var mostCommentedList = Session["MostCommented"] as List<Wordless.Models.Book>;
                        }<Wordless.Models.Book>
                            @if (mostCommentedList.Count() > 0)
                            {
                                <p class="sidebar-name">Most commented</p>
                                foreach (var book in mostCommentedList)
                                {
                                    var AuthorName = (from x in db.Books
                                                      where x.BookId == book.BookId
                                                      select x.Author.Name).First();
                                    <ul class="sidebar-list">
                                        <li><a href="@Url.Action("BookDetails", "Book" , new { bookId=book.BookId })"><span class="glyphicon glyphicon-book"></span><strong> @book.Title</strong></a></li>
                                        <li class="sidebar-list-text-author">Written by: @AuthorName</li>
                                        <li>@book.Comments.Count() <span class="glyphicon glyphicon-comment"></span></li>
                                    </ul>
                                }
                            }
                    </div>
                </div>
            </div>
        </div>
    </div>
    </div>
    </div>
</body>













@*@model Wordless.Models.Book
@using Wordless.Models;
@{WordlessContext db = new WordlessContext(); }

@{
    ViewBag.Title = "Create";
}

<body>
    <div class="container">
        <div class="row">
            <div class="">
                <div class="col-lg-8 col-md-8">
                    <div class="bodyDiv register-page-div">
                        <div class="form-horizontal row">
                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                <h4>Add book</h4>
                                <hr />
                                <form role="form" action="~/AuthorPage/Create" method="post">

                                    @Html.AntiForgeryToken()

                                    <div class="form-group col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        @Html.LabelFor(model => model.Title)
                                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                    <div class="form-group col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
                                        @Html.EnumDropDownListFor(model => model.Genre, htmlAttributes: new { @class = "form-control" })
                                    </div>

                                    <div class="form-group col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>

                                    <div class="form-group col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        @Html.LabelFor(model => model.BookText, htmlAttributes: new { @class = "control-label col-md-2" })
                                        @Html.EditorFor(model => model.BookText, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>

                                    <div class="form-group col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        @Html.LabelFor(model => model.FileId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        @Html.EditorFor(model => model.FileId, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                    <div class="form-group col-md-offset-2 col-md-10">
                                        <input type="submit" value="Create" class="btn btn-default" />
                                    </div>
                                </form>
                            </div>
                        </div>
                        <div>
                        </div>
                    </div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
                <div class="col-md-4 col-lg-4">
                    <div class="sidebar-Top sidebar-nav hidden-sm hidden-xs">
                        @{
                            var mostDownloadedList = Session["MostDownloaded"] as List<Wordless.Models.Book>;
                        }<Wordless.Models.Book>
                            @if (mostDownloadedList.Count > 0)
                            {
                                <p class="sidebar-name">Most downloaded</p>
                                foreach (var book in mostDownloadedList)
                                {
                                    var AuthorName = (from x in db.Books
                                                      where x.BookId == book.BookId
                                                      select x.Author.Name).First();
                                    <ul class="sidebar-list">
                                        <li><a href="@Url.Action("BookDetails", "Book" , new { bookId=book.BookId })"><span class="glyphicon glyphicon-book"></span><strong> @book.Title</strong></a></li>
                                        <li class="sidebar-list-text-author">Written by: @AuthorName</li>
                                        <li>@book.TimesPurchased <span class="glyphicon glyphicon-credit-card"></span></li>
                                    </ul>
                                }
                            }
                    </div>
                    <div class="sidebar-mid-bot sidebar-nav hidden-sm hidden-xs">
                        @{
                            var bestRatedList = Session["BestRating"] as List<Wordless.Models.PurchasedBook>;
                        }<Wordless.Models.PurchasedBook>
                            @if (bestRatedList.Count > 0)
                            {
                                <p class="sidebar-name">Best rating</p>
                                foreach (var item in bestRatedList)
                                {
                                    var AuthorName = (from x in db.Books
                                                      where x.BookId == item.Book.BookId
                                                      select x.Author.Name).First();
                                    <ul class="sidebar-list">
                                        <li><a href="@Url.Action("BookDetails", "Book" , new { bookId=item.BookId })"><span class="glyphicon glyphicon-book"></span><strong> @item.Book.Title</strong></a></li>
                                        <li class="sidebar-list-text-author">Written by: @AuthorName</li>
                                        <li>@item.Rating <span class="glyphicon glyphicon-star"></span></li>
                                    </ul>
                                }
                            }
                    </div>
                    <div class="sidebar-mid-bot sidebar-nav hidden-sm hidden-xs">
                        @{
                            var mostCommentedList = Session["MostCommented"] as List<Wordless.Models.Book>;
                        }<Wordless.Models.Book>
                            @if (mostCommentedList.Count() > 0)
                            {
                                <p class="sidebar-name">Most commented</p>
                                foreach (var book in mostCommentedList)
                                {
                                    var AuthorName = (from x in db.Books
                                                      where x.BookId == book.BookId
                                                      select x.Author.Name).First();
                                    <ul class="sidebar-list">
                                        <li><a href="@Url.Action("BookDetails", "Book" , new { bookId=book.BookId })"><span class="glyphicon glyphicon-book"></span><strong> @book.Title</strong></a></li>
                                        <li class="sidebar-list-text-author">Written by: @AuthorName</li>
                                        <li>@book.Comments.Count() <span class="glyphicon glyphicon-comment"></span></li>
                                    </ul>
                                }
                            }
                    </div>
                </div>
            </div>
        </div>
    </div>
    </div>
    </div>
</body>*@
