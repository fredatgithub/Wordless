@model IEnumerable<Wordless.Models.Book>

@{
    ViewBag.Title = "Index";
}
<div class="container">
    <div class="siteBody">
        <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
        @*<div id="player"></div>*@

        <script>
    // 2. This code loads the IFrame Player API code asynchronously.
    var tag = document.createElement('script');

    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    // 3. This function creates an <iframe> (and YouTube player)
    //    after the API code downloads.
    var player;
    function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
            height: '390',
            width: '640',
            videoId: 'AYvOSrgvCrk',
            events: {
                'onReady': onPlayerReady,
                'onStateChange': onPlayerStateChange
            }
        });
    }

    // 4. The API will call this function when the video player is ready.
    function onPlayerReady(event) {
        event.target.playVideo();
    }

    // 5. The API calls this function when the player's state changes.
    //    The function indicates that when playing a video (state=1),
    //    the player should play for six seconds and then stop.
    var done = false;
    function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
            setTimeout(stopVideo, 6000);
            done = true;
        }
    }
    function stopVideo() {
        player.stopVideo();
    }
        </script>

        <!--TEMPORARY VIEW TO SHOW BOOKS-->

        @if (Model.Count() > 0)
        {
            foreach (var item in Model)
            {
                <div class="container-narrow">
                    <div class="row rowfix">
                        <div class="col-sm-12 divnews">
                            <h2><strong>@item.Title</strong></h2>
                            <div id="divtext">
                                <p>By: @item.Author.Name</p>
                            </div>
                            <p>@item.BookText</p>
                            <p>@item.Genre</p>
                            <p>Price: @item.Price</p>
                            <p>No. of downloads: @item.TimesPurchased</p>
                            <p>Kommentarer:</p>
                            @foreach (var comment in @item.Comments)
                    {
                                <p> @comment.CommentText</p>
                            }
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>
